---
import Button from "./Button.astro";
import { t } from "i18next";
import Loader from "./Loader.astro";

const success = t("contact.success");
const successMessage = t("contact.successMessage");
const error = t("contact.error");
const errorMessage = t("contact.errorMessage");
---

<contact-form
  data-success={success}
  data-successmessage={successMessage}
  data-error={error}
  data-errormessage={errorMessage}
>
  <form id="contact-form" class="relative">
    <h3 class="font-medium text-lg mb-2">{t("contact.sendMeAMessage")}</h3>
    <div class="space-y-4">
      <input
        name="from_name"
        aria-label={t("contact.name")}
        type="text"
        placeholder={t("contact.name")}
        required
      />
      <input
        name="from_email"
        aria-label={t("contact.email")}
        type="email"
        placeholder={t("contact.email")}
        required
      />
      <textarea
        name="message"
        aria-label={t("contact.message")}
        placeholder={t("contact.message")}
        rows="6"
        required></textarea>
      <div class="flex justify-end">
        <Button primary>{t("contact.send")}</Button>
      </div>
    </div>
    <Loader />
  </form>
</contact-form>

<!-- TODO styling could use some work -->
<style>
  input,
  textarea {
    width: 100%;
    padding: 12px;
    border-radius: 4px;
    background-color: transparent;
    border: 2px solid #a8a29e;
    outline: none;
  }

  input:focus,
  textarea:focus {
    border: 2px solid #4f46e5;
  }

  input::placeholder,
  textarea::placeholder {
    color: #999999;
  }
</style>

<script>
  import sendNotification from "../utils/sendNotification";

  class ContactForm extends HTMLElement {
    loaderContainer: HTMLDivElement;
    form: HTMLFormElement;

    constructor() {
      super();
      this.form = this.querySelector("#contact-form") as HTMLFormElement;
      this.loaderContainer = this.querySelector(
        "#loader-container"
      ) as HTMLDivElement;
      this.submitMessage = this.submitMessage.bind(this);
      this.form.addEventListener("submit", this.submitMessage);
    }

    showLoader() {
      this.loaderContainer.classList.replace("hidden", "flex");
    }

    hideLoader() {
      this.loaderContainer.classList.replace("flex", "hidden");
    }

    submitMessage(e: SubmitEvent) {
      e.preventDefault();
      this.showLoader();
      const data = Object.fromEntries(new FormData(this.form).entries());
      const body = JSON.stringify({
        service_id: "default_service",
        template_id: "portfolio_template",
        user_id: "Sp1b-6nyvnpp_hhP1",
        template_params: data,
      });
      fetch("https://api.emailjs.com/api/v1.0/email/send", {
        method: "POST",
        headers: {
          "Content-type": "application/json",
        },
        body,
      })
        .then((res) => {
          if (res.status === 200) {
            sendNotification(
              "success",
              this.dataset.successmessage as string,
              this.dataset.success
            );
            this.form.reset();
            this.hideLoader();
          } else throw new Error();
        })
        .catch(() => {
          sendNotification(
            "error",
            this.dataset.errormessage as string,
            this.dataset.error
          );
          this.hideLoader();
        });
    }
  }

  customElements.define("contact-form", ContactForm);
</script>
