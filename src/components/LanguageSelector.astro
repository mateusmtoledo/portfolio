---
import i18next from "i18next";
import Language from "./Language.astro";
import LanguageDropdown from "./LanguageDropdown.astro";

const languages = [
  {
    lang: "EN-US",
    locale: "enUS",
    path: "",
  },
  {
    lang: "PT-BR",
    locale: "ptBR",
    path: "ptBR",
  },
];

const selectedLanguage = languages.find(
  (language) => language.locale === i18next.language
);
const options = languages.filter((language) => language !== selectedLanguage);
---

<div class="relative flex w-20">
  <button type="button" id="language-selector" class="transition-all w-full">
    <Language language={selectedLanguage} />
  </button>
  <LanguageDropdown options={options} />
</div>

<style>
  #language-selector {
    border-radius: 4px;
    outline: 0 solid transparent;
  }
  #language-selector:hover:not(.active) {
    outline: 2px solid rgb(79, 70, 229);
  }
  #language-selector.active {
    background-color: rgb(79, 70, 229);
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
  }
</style>

<script>
  const languageSelector = document.getElementById(
    "language-selector"
  ) as HTMLButtonElement;

  const dropdownMenu = document.getElementById("language-dropdown");

  document.addEventListener("click", (e) => {
    closeLanguageMenu();
  });

  let menuOpen = false;

  function openLanguageMenu() {
    if (!dropdownMenu) {
      throw new Error("Dropdown menu element not found.");
    }
    menuOpen = true;
    languageSelector.classList.add("active");
    dropdownMenu.classList.remove("scale-y-0");
  }

  function closeLanguageMenu() {
    if (!dropdownMenu) {
      throw new Error("Dropdown menu element not found.");
    }
    menuOpen = false;
    languageSelector.classList.remove("active");
    dropdownMenu.classList.add("scale-y-0");
  }

  function toggleLanguageMenu() {
    if (menuOpen) closeLanguageMenu();
    else openLanguageMenu();
  }

  languageSelector.addEventListener("click", (e) => {
    e.stopPropagation();
    toggleLanguageMenu();
  });
</script>
